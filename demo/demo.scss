@import "../generator";
@import "demo-settings";

.box {
    display: none;
    width: 100px;
    height: 100px; 
    border: none;
}

.scheme {
    width: 700px;
    margin: 0 auto; 
    padding: 0; 
}

.row {
    display: block;
}

$seed-color: #FFA000;

$schemes: ('mono', 'complementary', 'triad', 'tetrad', 'analogic');

@for $i from 1 through length($schemes) {
    // $demo-settings: (seed: $seed-color, global: true, scheme: nth($schemes, $i), distance: 0.3, variation: 'none', complement: false);
    $colorscheme: generate($seed: $seed-color, $scheme: nth($schemes, $i));
    
    @each $key in map-keys($map: $colorscheme) {
        $color: map-get($map: $colorscheme, $key: #{$key});
        $class: str-slice($key, 2);
    
        .#{nth($schemes, $i)}-#{$class} {
            display: inline-block;
            background: $color;
            @if lightness($color) > 40% {
                color: #000;
            } @else {
                color: #fff;
            }
            &::before {
                content: quote(inspect($color));
            }
        }
    }

}


